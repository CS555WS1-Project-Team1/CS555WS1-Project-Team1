from gedcom.parser import Parser
import datetime



def convertdate(d):
    d=d.split(" ")
    mo=["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"]
    return datetime.datetime(int(d[2]), mo.index(d[1])+1, int(d[0]))
 
# Path to your `.ged` file
file_path = 'SAVLEEN-KAUR-27-Sep-2021-152245640.ged'

# Initialize the parser
gedcom_parser = Parser()

# Parse your file
gedcom_parser.parse_file(file_path)

root_child_elements = gedcom_parser.get_root_child_elements()

# Iterate through all root child elements
for element in root_child_elements:
    
    if element.get_tag()=="FAM":
        # print("")
        # print("")
        arr=[]
        error=0
        mar_date="not available" 
        # print(element.get_pointer())
        for i in element.get_child_elements():
            # print(i)
            if i.get_tag()=="HUSB" or i.get_tag()=="WIFE":
                arr.append(i.get_value())
                               
            if i.get_tag()=="MARR":
                for k in i.get_child_elements():
                    # print(k) 
                    if k.get_tag()=="DATE":
                        mar_date=k.get_value()
                        mar_date=convertdate(mar_date)
        # print(arr)
        # print(mar_date)
       
        if mar_date!="not available":
            for per in root_child_elements:
                # print(per.get_pointer())
                if per.get_pointer() in arr:
                    # print(per.get_pointer())
                    for pe in per.get_child_elements():
                        #print(pe)
                        if pe.get_tag()=="BIRT":
                            #print(pe)
                            for p in pe.get_child_elements():
                                if p.get_tag()=="DATE":
                                    
                                    birth_date=p.get_value()
                                    
                                    birth_date=convertdate(birth_date)
                                    # print(birth_date)
                                    # print(mar_date)
                                    diff = (mar_date - birth_date).days / 365.25
                                    
                                    if diff < 18:
                                        error=1
                                        
                                        
            if (error==1):
                print("Marriage date invalid for family:"+element.get_pointer())
                                    
        # else:
        #     print("marriage date not available")

print("End of Program")    
    
